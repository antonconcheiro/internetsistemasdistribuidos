/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package es.udc.ws.runfic.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ThriftCarreraDto implements org.apache.thrift.TBase<ThriftCarreraDto, ThriftCarreraDto._Fields>, java.io.Serializable, Cloneable, Comparable<ThriftCarreraDto> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThriftCarreraDto");

  private static final org.apache.thrift.protocol.TField CARRERA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("carreraId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CIUDAD_FIELD_DESC = new org.apache.thrift.protocol.TField("ciudad", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DESCRIPCION_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField FECHA_CARRERA_FIELD_DESC = new org.apache.thrift.protocol.TField("fechaCarrera", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PRECIO_FIELD_DESC = new org.apache.thrift.protocol.TField("precio", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField PLAZAS_DISP_FIELD_DESC = new org.apache.thrift.protocol.TField("plazasDisp", org.apache.thrift.protocol.TType.I32, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ThriftCarreraDtoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ThriftCarreraDtoTupleSchemeFactory());
  }

  public long carreraId; // required
  public String ciudad; // required
  public String descripcion; // required
  public String fechaCarrera; // required
  public double precio; // required
  public int plazasDisp; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CARRERA_ID((short)1, "carreraId"),
    CIUDAD((short)2, "ciudad"),
    DESCRIPCION((short)3, "descripcion"),
    FECHA_CARRERA((short)4, "fechaCarrera"),
    PRECIO((short)5, "precio"),
    PLAZAS_DISP((short)6, "plazasDisp");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CARRERA_ID
          return CARRERA_ID;
        case 2: // CIUDAD
          return CIUDAD;
        case 3: // DESCRIPCION
          return DESCRIPCION;
        case 4: // FECHA_CARRERA
          return FECHA_CARRERA;
        case 5: // PRECIO
          return PRECIO;
        case 6: // PLAZAS_DISP
          return PLAZAS_DISP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CARRERAID_ISSET_ID = 0;
  private static final int __PRECIO_ISSET_ID = 1;
  private static final int __PLAZASDISP_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CARRERA_ID, new org.apache.thrift.meta_data.FieldMetaData("carreraId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CIUDAD, new org.apache.thrift.meta_data.FieldMetaData("ciudad", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPCION, new org.apache.thrift.meta_data.FieldMetaData("descripcion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FECHA_CARRERA, new org.apache.thrift.meta_data.FieldMetaData("fechaCarrera", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRECIO, new org.apache.thrift.meta_data.FieldMetaData("precio", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PLAZAS_DISP, new org.apache.thrift.meta_data.FieldMetaData("plazasDisp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThriftCarreraDto.class, metaDataMap);
  }

  public ThriftCarreraDto() {
  }

  public ThriftCarreraDto(
    long carreraId,
    String ciudad,
    String descripcion,
    String fechaCarrera,
    double precio,
    int plazasDisp)
  {
    this();
    this.carreraId = carreraId;
    setCarreraIdIsSet(true);
    this.ciudad = ciudad;
    this.descripcion = descripcion;
    this.fechaCarrera = fechaCarrera;
    this.precio = precio;
    setPrecioIsSet(true);
    this.plazasDisp = plazasDisp;
    setPlazasDispIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThriftCarreraDto(ThriftCarreraDto other) {
    __isset_bitfield = other.__isset_bitfield;
    this.carreraId = other.carreraId;
    if (other.isSetCiudad()) {
      this.ciudad = other.ciudad;
    }
    if (other.isSetDescripcion()) {
      this.descripcion = other.descripcion;
    }
    if (other.isSetFechaCarrera()) {
      this.fechaCarrera = other.fechaCarrera;
    }
    this.precio = other.precio;
    this.plazasDisp = other.plazasDisp;
  }

  public ThriftCarreraDto deepCopy() {
    return new ThriftCarreraDto(this);
  }

  @Override
  public void clear() {
    setCarreraIdIsSet(false);
    this.carreraId = 0;
    this.ciudad = null;
    this.descripcion = null;
    this.fechaCarrera = null;
    setPrecioIsSet(false);
    this.precio = 0.0;
    setPlazasDispIsSet(false);
    this.plazasDisp = 0;
  }

  public long getCarreraId() {
    return this.carreraId;
  }

  public ThriftCarreraDto setCarreraId(long carreraId) {
    this.carreraId = carreraId;
    setCarreraIdIsSet(true);
    return this;
  }

  public void unsetCarreraId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CARRERAID_ISSET_ID);
  }

  /** Returns true if field carreraId is set (has been assigned a value) and false otherwise */
  public boolean isSetCarreraId() {
    return EncodingUtils.testBit(__isset_bitfield, __CARRERAID_ISSET_ID);
  }

  public void setCarreraIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CARRERAID_ISSET_ID, value);
  }

  public String getCiudad() {
    return this.ciudad;
  }

  public ThriftCarreraDto setCiudad(String ciudad) {
    this.ciudad = ciudad;
    return this;
  }

  public void unsetCiudad() {
    this.ciudad = null;
  }

  /** Returns true if field ciudad is set (has been assigned a value) and false otherwise */
  public boolean isSetCiudad() {
    return this.ciudad != null;
  }

  public void setCiudadIsSet(boolean value) {
    if (!value) {
      this.ciudad = null;
    }
  }

  public String getDescripcion() {
    return this.descripcion;
  }

  public ThriftCarreraDto setDescripcion(String descripcion) {
    this.descripcion = descripcion;
    return this;
  }

  public void unsetDescripcion() {
    this.descripcion = null;
  }

  /** Returns true if field descripcion is set (has been assigned a value) and false otherwise */
  public boolean isSetDescripcion() {
    return this.descripcion != null;
  }

  public void setDescripcionIsSet(boolean value) {
    if (!value) {
      this.descripcion = null;
    }
  }

  public String getFechaCarrera() {
    return this.fechaCarrera;
  }

  public ThriftCarreraDto setFechaCarrera(String fechaCarrera) {
    this.fechaCarrera = fechaCarrera;
    return this;
  }

  public void unsetFechaCarrera() {
    this.fechaCarrera = null;
  }

  /** Returns true if field fechaCarrera is set (has been assigned a value) and false otherwise */
  public boolean isSetFechaCarrera() {
    return this.fechaCarrera != null;
  }

  public void setFechaCarreraIsSet(boolean value) {
    if (!value) {
      this.fechaCarrera = null;
    }
  }

  public double getPrecio() {
    return this.precio;
  }

  public ThriftCarreraDto setPrecio(double precio) {
    this.precio = precio;
    setPrecioIsSet(true);
    return this;
  }

  public void unsetPrecio() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRECIO_ISSET_ID);
  }

  /** Returns true if field precio is set (has been assigned a value) and false otherwise */
  public boolean isSetPrecio() {
    return EncodingUtils.testBit(__isset_bitfield, __PRECIO_ISSET_ID);
  }

  public void setPrecioIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRECIO_ISSET_ID, value);
  }

  public int getPlazasDisp() {
    return this.plazasDisp;
  }

  public ThriftCarreraDto setPlazasDisp(int plazasDisp) {
    this.plazasDisp = plazasDisp;
    setPlazasDispIsSet(true);
    return this;
  }

  public void unsetPlazasDisp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PLAZASDISP_ISSET_ID);
  }

  /** Returns true if field plazasDisp is set (has been assigned a value) and false otherwise */
  public boolean isSetPlazasDisp() {
    return EncodingUtils.testBit(__isset_bitfield, __PLAZASDISP_ISSET_ID);
  }

  public void setPlazasDispIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PLAZASDISP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CARRERA_ID:
      if (value == null) {
        unsetCarreraId();
      } else {
        setCarreraId((Long)value);
      }
      break;

    case CIUDAD:
      if (value == null) {
        unsetCiudad();
      } else {
        setCiudad((String)value);
      }
      break;

    case DESCRIPCION:
      if (value == null) {
        unsetDescripcion();
      } else {
        setDescripcion((String)value);
      }
      break;

    case FECHA_CARRERA:
      if (value == null) {
        unsetFechaCarrera();
      } else {
        setFechaCarrera((String)value);
      }
      break;

    case PRECIO:
      if (value == null) {
        unsetPrecio();
      } else {
        setPrecio((Double)value);
      }
      break;

    case PLAZAS_DISP:
      if (value == null) {
        unsetPlazasDisp();
      } else {
        setPlazasDisp((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CARRERA_ID:
      return Long.valueOf(getCarreraId());

    case CIUDAD:
      return getCiudad();

    case DESCRIPCION:
      return getDescripcion();

    case FECHA_CARRERA:
      return getFechaCarrera();

    case PRECIO:
      return Double.valueOf(getPrecio());

    case PLAZAS_DISP:
      return Integer.valueOf(getPlazasDisp());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CARRERA_ID:
      return isSetCarreraId();
    case CIUDAD:
      return isSetCiudad();
    case DESCRIPCION:
      return isSetDescripcion();
    case FECHA_CARRERA:
      return isSetFechaCarrera();
    case PRECIO:
      return isSetPrecio();
    case PLAZAS_DISP:
      return isSetPlazasDisp();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ThriftCarreraDto)
      return this.equals((ThriftCarreraDto)that);
    return false;
  }

  public boolean equals(ThriftCarreraDto that) {
    if (that == null)
      return false;

    boolean this_present_carreraId = true;
    boolean that_present_carreraId = true;
    if (this_present_carreraId || that_present_carreraId) {
      if (!(this_present_carreraId && that_present_carreraId))
        return false;
      if (this.carreraId != that.carreraId)
        return false;
    }

    boolean this_present_ciudad = true && this.isSetCiudad();
    boolean that_present_ciudad = true && that.isSetCiudad();
    if (this_present_ciudad || that_present_ciudad) {
      if (!(this_present_ciudad && that_present_ciudad))
        return false;
      if (!this.ciudad.equals(that.ciudad))
        return false;
    }

    boolean this_present_descripcion = true && this.isSetDescripcion();
    boolean that_present_descripcion = true && that.isSetDescripcion();
    if (this_present_descripcion || that_present_descripcion) {
      if (!(this_present_descripcion && that_present_descripcion))
        return false;
      if (!this.descripcion.equals(that.descripcion))
        return false;
    }

    boolean this_present_fechaCarrera = true && this.isSetFechaCarrera();
    boolean that_present_fechaCarrera = true && that.isSetFechaCarrera();
    if (this_present_fechaCarrera || that_present_fechaCarrera) {
      if (!(this_present_fechaCarrera && that_present_fechaCarrera))
        return false;
      if (!this.fechaCarrera.equals(that.fechaCarrera))
        return false;
    }

    boolean this_present_precio = true;
    boolean that_present_precio = true;
    if (this_present_precio || that_present_precio) {
      if (!(this_present_precio && that_present_precio))
        return false;
      if (this.precio != that.precio)
        return false;
    }

    boolean this_present_plazasDisp = true;
    boolean that_present_plazasDisp = true;
    if (this_present_plazasDisp || that_present_plazasDisp) {
      if (!(this_present_plazasDisp && that_present_plazasDisp))
        return false;
      if (this.plazasDisp != that.plazasDisp)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ThriftCarreraDto other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCarreraId()).compareTo(other.isSetCarreraId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCarreraId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.carreraId, other.carreraId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCiudad()).compareTo(other.isSetCiudad());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCiudad()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ciudad, other.ciudad);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescripcion()).compareTo(other.isSetDescripcion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescripcion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion, other.descripcion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFechaCarrera()).compareTo(other.isSetFechaCarrera());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFechaCarrera()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fechaCarrera, other.fechaCarrera);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrecio()).compareTo(other.isSetPrecio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrecio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.precio, other.precio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlazasDisp()).compareTo(other.isSetPlazasDisp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlazasDisp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.plazasDisp, other.plazasDisp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ThriftCarreraDto(");
    boolean first = true;

    sb.append("carreraId:");
    sb.append(this.carreraId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ciudad:");
    if (this.ciudad == null) {
      sb.append("null");
    } else {
      sb.append(this.ciudad);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("descripcion:");
    if (this.descripcion == null) {
      sb.append("null");
    } else {
      sb.append(this.descripcion);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fechaCarrera:");
    if (this.fechaCarrera == null) {
      sb.append("null");
    } else {
      sb.append(this.fechaCarrera);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("precio:");
    sb.append(this.precio);
    first = false;
    if (!first) sb.append(", ");
    sb.append("plazasDisp:");
    sb.append(this.plazasDisp);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThriftCarreraDtoStandardSchemeFactory implements SchemeFactory {
    public ThriftCarreraDtoStandardScheme getScheme() {
      return new ThriftCarreraDtoStandardScheme();
    }
  }

  private static class ThriftCarreraDtoStandardScheme extends StandardScheme<ThriftCarreraDto> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThriftCarreraDto struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CARRERA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.carreraId = iprot.readI64();
              struct.setCarreraIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CIUDAD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ciudad = iprot.readString();
              struct.setCiudadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DESCRIPCION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.descripcion = iprot.readString();
              struct.setDescripcionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FECHA_CARRERA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fechaCarrera = iprot.readString();
              struct.setFechaCarreraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PRECIO
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.precio = iprot.readDouble();
              struct.setPrecioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PLAZAS_DISP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.plazasDisp = iprot.readI32();
              struct.setPlazasDispIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThriftCarreraDto struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(CARRERA_ID_FIELD_DESC);
      oprot.writeI64(struct.carreraId);
      oprot.writeFieldEnd();
      if (struct.ciudad != null) {
        oprot.writeFieldBegin(CIUDAD_FIELD_DESC);
        oprot.writeString(struct.ciudad);
        oprot.writeFieldEnd();
      }
      if (struct.descripcion != null) {
        oprot.writeFieldBegin(DESCRIPCION_FIELD_DESC);
        oprot.writeString(struct.descripcion);
        oprot.writeFieldEnd();
      }
      if (struct.fechaCarrera != null) {
        oprot.writeFieldBegin(FECHA_CARRERA_FIELD_DESC);
        oprot.writeString(struct.fechaCarrera);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PRECIO_FIELD_DESC);
      oprot.writeDouble(struct.precio);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PLAZAS_DISP_FIELD_DESC);
      oprot.writeI32(struct.plazasDisp);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThriftCarreraDtoTupleSchemeFactory implements SchemeFactory {
    public ThriftCarreraDtoTupleScheme getScheme() {
      return new ThriftCarreraDtoTupleScheme();
    }
  }

  private static class ThriftCarreraDtoTupleScheme extends TupleScheme<ThriftCarreraDto> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThriftCarreraDto struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCarreraId()) {
        optionals.set(0);
      }
      if (struct.isSetCiudad()) {
        optionals.set(1);
      }
      if (struct.isSetDescripcion()) {
        optionals.set(2);
      }
      if (struct.isSetFechaCarrera()) {
        optionals.set(3);
      }
      if (struct.isSetPrecio()) {
        optionals.set(4);
      }
      if (struct.isSetPlazasDisp()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetCarreraId()) {
        oprot.writeI64(struct.carreraId);
      }
      if (struct.isSetCiudad()) {
        oprot.writeString(struct.ciudad);
      }
      if (struct.isSetDescripcion()) {
        oprot.writeString(struct.descripcion);
      }
      if (struct.isSetFechaCarrera()) {
        oprot.writeString(struct.fechaCarrera);
      }
      if (struct.isSetPrecio()) {
        oprot.writeDouble(struct.precio);
      }
      if (struct.isSetPlazasDisp()) {
        oprot.writeI32(struct.plazasDisp);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThriftCarreraDto struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.carreraId = iprot.readI64();
        struct.setCarreraIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.ciudad = iprot.readString();
        struct.setCiudadIsSet(true);
      }
      if (incoming.get(2)) {
        struct.descripcion = iprot.readString();
        struct.setDescripcionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.fechaCarrera = iprot.readString();
        struct.setFechaCarreraIsSet(true);
      }
      if (incoming.get(4)) {
        struct.precio = iprot.readDouble();
        struct.setPrecioIsSet(true);
      }
      if (incoming.get(5)) {
        struct.plazasDisp = iprot.readI32();
        struct.setPlazasDispIsSet(true);
      }
    }
  }

}

